/*
 * DistributedCronScheduler
 *
 * A simple distributed job scheduler running on top of AWS
 *
 * API version: 1.0.0
 * Contact: apollo-anonymous+demo@amazon.com
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package cronscheduler

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
    router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Welcome!")
}

var routes = Routes{
	
	Route{
		"AddJob",
		strings.ToUpper("Post"),
		"/job",
		AddJob,
	},
	Route{
		"DeleteJob",
		strings.ToUpper("Delete"),
		"/job/{jobId}",
		DeleteJob,
	},
	Route{
		"FindJobsByStatus",
		strings.ToUpper("Get"),
		"/job/findByStatus",
		FindJobsByStatus,
	},
	Route{
		"GetJobById",
		strings.ToUpper("Get"),
		"/job/{jobId}",
		GetJobById,
	},
	Route{
		"GetJobs",
		strings.ToUpper("Get"),
		"/jobs",
		GetJobs,
	},
	Route{
		"UpdateJob",
		strings.ToUpper("Put"),
		"/job",
		UpdateJob,
	},
}
